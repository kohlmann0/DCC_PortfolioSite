@model DCC_PortfolioSite.Models.AdminViewModel

<div>
    <hr style="border-color: #AAA; border-style: dashed" />
    <table>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.FirstName)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.FirstName, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.LastName)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.LastName, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.BirthDate)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.BirthDate, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.PrimaryPhone)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.PrimaryPhone, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.AlternatePhone)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.AlternatePhone, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.PrimaryEmail)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.PrimaryEmail, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.AlternateEmail)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.AlternateEmail, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.StreetAddress)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.StreetAddress, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.City)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.City, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.USAState)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.USAState, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.Country)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.Country, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.PostalCode)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.PostalCode, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.About)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.About, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.Photo)</td>
            <td class="inputData">
                @if (Model.ContactProfile.Img != null)
                { <img src=@Url.Action("GetImg", "Home", new { ProfileId = Model.ContactProfile.ProfileId }) alt="Image" height='50' width='50' />}
            </td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.LinkedIn)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.LinkedIn, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.GitHub)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.GitHub, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.PersonalWebsite)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.PersonalWebsite, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.AvailableForWork)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.AvailableForWork, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.HiredBy)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.HiredBy, new { @readonly = "readonly" })</td>
        </tr>
        <tr>
            <td class="inputLabel">@Html.DisplayNameFor(model => model.ContactProfile.CurrentWork)</td>
            <td class="inputData">@Html.DisplayFor(model => model.ContactProfile.CurrentWork, new { @readonly = "readonly" })</td>
        </tr>
    </table>
</div>

@*<p>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    @Html.ActionLink("Back to List", "Index")
</p>*@